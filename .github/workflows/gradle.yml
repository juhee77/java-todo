# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          docker-layer-caching: false

      # Grant execute permission to gradlew
      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      # Spring Boot Build
      - name: Spring Boot Build
        run: ./gradlew clean build --exclude-task test

      # 도커 허브 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}


      # Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }} ./

      # Push Docker image
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}

      # Deploy to AWS EC2
      # 도커 이미지를 풀 받고 , 컴포즈 파일을 실행 시킨다.
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }} # EC2 인스턴스 퍼블릭 DNS
          username: ubuntu
          key: ${{ secrets.AWS_PRIVACY_KEY }} # pem 키
          script: |
            DB_HOST="${{ secrets.DB_HOST }}"
            DB_NAME="${{ secrets.DB_NAME }}"
            DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            DB_USER="${{ secrets.DB_USER }}"
            DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
            DOCKERHUB_REPOSITORY="${{ secrets.DOCKERHUB_REPOSITORY }}"
            
            sudo docker pull $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:latest
            sudo docker stop todoApp || true
            sudo docker rm todoApp || true
            sudo docker image prune
            
            cd /home/ubuntu/docker-file
            docker-compose up -d


  #시간 출력
  current-time:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH:mm:ss
          utcOffset: "+09:00" # 기준이 UTC이기 때문에 한국시간인 KST를 맞추기 위해 +9시간 추가

      - name: Print Current Time
        run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}" # current-time 에서 지정한 포맷대로 현재 시간 출력
        shell: bash